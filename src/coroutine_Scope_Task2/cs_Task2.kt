package coroutine_Scope_Task2

import kotlinx.coroutines.*

/**
 * 2. Написать программу, выводящую в консоль следующее сообщение:
 * Начало программы
 * 1
 * 2
 * Произошел ленивый запуск
 * 3
 * 4
 * Программа завершена
 * Реализацию вывода переменной счетчика необходимо исполнить с помощью корутины
 * с задержкой внутри 1 сек.
 * Вывод строки "Произошел ленивый запуск" выполнить,
 * передав в параметр своей корутины CoroutineStart.LAZY,
 * задержку выдержать в соответствии заявленным выводом (после вывода 2).
 * Сообщение "Программа завершена" также выполняется в своей корутине
 * с отложенным запуском с таким расчетом,
 * чтобы она сработала после полного вывода переменной счетчика.
 *
 */
suspend fun main() = coroutineScope {
    println("Начало программы")
    val count: Job = launch {
        for (i in 1..4) {
            delay(1000L)
            println(i)
        }
    }
    val lazy: Job = launch(start = CoroutineStart.LAZY) {
        delay(3000L)
        println("Произошел ленивый запуск")
    }
    lazy.start()
    lazy.join()
    count.join()

    val end: Job = launch(start = CoroutineStart.LAZY) {
        println("Программа завершена")
    }
    end.start()
    end.join()
}
